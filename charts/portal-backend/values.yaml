name: portal-backend
portContainer: 80
portService: 8080
replicaCount: 1

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    nginx.ingress.kubernetes.io/cors-allow-origin: http://localhost:3000, https://*.dev.demo.ftcpro.co
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  tls: 
    - secretName: tls-secret
      hosts:
        - portal-backend.dev.demo.ftcpro.co
  hosts:
    - host: portal-backend.dev.demo.ftcpro.co
      paths:
        - path: /api/registration
          pathType: Prefix
          backend:
            service: registration-service
            port: 8080
        - path: /api/administration
          pathType: Prefix
          backend:
            service: administration-service
            port: 8080
        - path: /api/notification
          pathType: Prefix
          backend:
            service: notification-service
            port: 8080
        - path: /api/provisioning
          pathType: Prefix
          backend:
            service: provisioning-service
            port: 8080
        - path: /api/apps
          pathType: Prefix
          backend:
            service: marketplace-app-service
            port: 8080


postgresql:
  enabled: false
  # auth:
  #   existingSecret: secret-postgres-init
  # secret:
  #   password: ""
  #   replicationPassword: ""
  #   initUserDbSql: ""
  # architecture: replication
  # audit:
  #   pgAuditLog: write, ddl
  #   logLinePrefix: "%m %u %d "
 
registration:
  name: registration-service
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_registration-service
    tag: int-v0.5.1
  secret:
    name: secret-registration
    appsettings: "<path:portal/data/dev/registration#appsettings.json>"

administration:
  name: administration-service
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_administration-service
    tag: int-v0.5.1
  secret:
    name: secret-administration
    appsettings: "<path:portal/data/dev/administration#appsettings.json>"

provisioning:
  name: provisioning-service
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_provisioning-service
    tag: int-v0.5.1
  secret:
    name: secret-provisioning
    appsettings: "<path:portal/data/dev/provisioning#appsettings.json>"

appmarketplace:
  name: marketplace-app-service
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_marketplace-app-service
    tag: int-v0.5.1
  secret:
    name: secret-appmarketplace
    appsettings: "<path:portal/data/dev/appmarketplace#appsettings.json>"

portalmigrations:
  name: portal-migrations
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_portal-migrations
    tag: int-v0.5.1
  secret:
    name: secret-portal-migrations
    appsettings: "<path:portal/data/dev/portal-migrations#appsettings.json>"

portalmaintenance:
  name: portal-maintenance
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_maintenance-service
    tag: int-v0.5.1
  secret:
    name: secret-portal-maintenance
    appsettings: "<path:portal/data/dev/portal-maintenance#appsettings.json>"

notification:
  name: notification-service
  image: 
    name: ghcr.io/catenax-ng/product-portal-backend_notification-service
    tag: int-v0.5.1
  secret:
    name: secret-notification
    appsettings: "<path:portal/data/dev/notification#appsettings.json>"

pgadmin4:
  enabled: false
  ingress:
    enabled: false
